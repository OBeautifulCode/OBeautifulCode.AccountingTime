// --------------------------------------------------------------------------------------------------------------------
// <copyright file="AccountingTimeSerializer.cs" company="OBeautifulCode">
//   Copyright (c) OBeautifulCode. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced from NuGet package. Will be overwritten with package update except in OBeautifulCode.AccountignTime.BsonSerialization source.
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.AccountingTime.BsonSerialization
{
    using System;
    using System.Linq;

    using MongoDB.Bson.Serialization;

    /// <summary>
    /// A serializer for Accounting Time types.
    /// </summary>
#if !OBeautifulCodeAccountingTimeBsonSerializationRecipesProject
    [System.Diagnostics.DebuggerStepThrough]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [System.CodeDom.Compiler.GeneratedCode("OBeautifulCode.AccountingTime.BsonSerialization", "See package version number")]
#endif
    public static class AccountingTimeSerializer
    {
        /// <summary>
        /// Registers this serializer.
        /// </summary>
        public static void Register()
        {
            var unitOfTimeTypes =
                typeof(UnitOfTime).Assembly.GetTypes()
                .Where(type => type.IsSubclassOf(typeof(UnitOfTime)))
                .ToList();

            unitOfTimeTypes.Add(typeof(UnitOfTime));

            unitOfTimeTypes.ForEach(t => BsonSerializer.RegisterSerializer(t, Activator.CreateInstance(typeof(UnitOfTimeSerializer<>).MakeGenericType(t)) as IBsonSerializer));
        }
    }
}
